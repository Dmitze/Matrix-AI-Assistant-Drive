#!/usr/bin/env node

/**
 * Matrix AI Assistant Drive - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
 * –û–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞.
 */

import dotenv from 'dotenv';
import { Bot } from './bot.js';
import { logger } from './utils/logger.js';
import { metricsCollector } from './metrics.js';
import { cacheManager } from './cache.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
dotenv.config();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è graceful shutdown (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
async function gracefulShutdown(signal) {
  logger.info(`–û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª ${signal}, –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–±–æ—Ç—É...`);
  
  try {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –º–µ—Ç—Ä–∏–∫
    await metricsCollector.stopServer();
    logger.info('‚úÖ –°–µ—Ä–≤–µ—Ä –º–µ—Ç—Ä–∏–∫ –∑—É–ø–∏–Ω–µ–Ω–æ');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
    await cacheManager.disconnect();
    logger.info('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Redis –∑–∞–∫—Ä–∏—Ç–æ');
    
  } catch (error) {
    logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ graceful shutdown:', error.message);
  }
  
  process.exit(0);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => gracefulShutdown('SIGINT'));
process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  logger.error('–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  logger.error('–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–µ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –ø—Ä–æ–º—ñ—Å—É:', reason);
  process.exit(1);
});

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async function main() {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ Matrix AI Assistant Drive...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = [
      'MATRIX_HOMESERVER_URL',
      'MATRIX_ACCESS_TOKEN', 
      'MATRIX_USER_ID'
    ];
    
    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missingVars.length > 0) {
      throw new Error(`–í—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞: ${missingVars.join(', ')}`);
    }
    
    logger.info('‚úÖ –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –º–µ—Ç—Ä–∏–∫
    await metricsCollector.startServer();
    logger.info('‚úÖ –°–µ—Ä–≤–µ—Ä –º–µ—Ç—Ä–∏–∫ –∑–∞–ø—É—â–µ–Ω–æ');

    // –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    const bot = new Bot();
    await bot.start();

    logger.info('‚úÖ –ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ —ñ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!');
    
  } catch (error) {
    logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –¥–æ–¥–∞—Ç–∫—É:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
main(); 